{"version":3,"sources":["components/NotFound/NotFound.jsx","loader/db/db.js","utils/api.js","utils/helpers.js","localization/index.js","localization/english.js","localization/khmer.js","views/Login/Login.jsx","redux/actions/auth.js","redux/types/types.js","views/OTP/OTP.jsx","components/Sider/Sider.jsx","components/AvatarPanel/AvatarPanel.jsx","components/LanguageSwitcher/LanguageSwitcher.jsx","components/Header/Header.jsx","components/Sider/SiderLayout.jsx","views/index-sections/SectionTab.jsx","views/Outbox/Outbox.jsx","components/MessageForm/MessageForm.jsx","components/PhoneSimulator/phoneSimulator.jsx","utils/constants.js","views/Home/Home.jsx","views/Messenger/Messenger.jsx","utils/routes.js","App.js","serviceWorker.js","redux/reducers/message.js","redux/reducers/auth.js","redux/reducers/index.js","redux/redux.js","redux/storages/localStorage.js","loader/auth/auth.js","index.js"],"names":["NotFound","className","fetchAllMessage","a","databaseRef","database","ref","limitToLast","Promise","resolve","reject","on","snapshot","val","messages","forEach","child","push","reverse","error","postMessage","options","message","date","moment","format","then","snap","key","result","instance","axios","create","baseURL","process","headers","interceptors","request","use","config","token","currentSession","JSON","parse","localStorage","getItem","auth","Error","err","getToken","Authorization","post","signInWithCustomToken","signOut","phone","code","currentUser","getIdTokenResult","i18n","initReactI18next","init","resources","en","translation","Outbox","Drafts","Text","app_title","logout_title","cancel","reset","send","ok","invalid_phone","login_with_phone","enter_otp","phone_placeholder","otp_placeholder","send_code","login","text_message","km","lng","fallbackLng","interpolation","escapeValue","changeLanguage","Login","props","state","isLoading","phoneError","codeSent","requestOtp","bind","handleInputChange","authenticateOtp","handleOtpChange","this","localization","t","title","okText","setState","api","console","log","savePhone","response","data","saveAuthToken","history","customToken","value","length","style","minHeight","backgroundImage","width","fontSize","fontWeight","prefix","UserOutlined","placeholder","name","defaultValue","maxLength","type","onChange","onClick","loading","showIcon","banner","closable","Component","connect","dispatch","payload","_savePhone","withTranslation","withRouter","OTP","event","target","checked","Container","Row","paddingTop","Col","lg","md","Card","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","Button","block","color","_saveAuthToken","Sider","SubMenu","SiderNavigation","useTranslation","margin","transform","to","src","alt","theme","mode","height","borderRight","Icon","component","Item","UserMenu","openKeys","onOpenChange","AvatarPanel","image","content","trigger","size","lang","i18next","LanguageSwitcher","confirm","AntHeader","Header","padding","PoweroffOutlined","cancelText","onOk","clear","window","location","href","onCancel","Content","SiderLayout","collapsed","children","SectionTab","useState","allMessages","setAllMessage","setError","setIsLoading","activeTab","setActiveTab","useEffect","fetchData","useCallback","API","xs","sm","Nav","tabs","vertical","pills","map","item","index","NavItem","toString","classnames","active","tab","TabContent","TabPane","tabId","borderColor","borderTopWidth","TextArea","MessageProvider","messageProviderIcon","messageProviderLabel","MessageForm","messenger","onMessageChange","onSend","isSuccess","disabled","maxChar","autoSize","resize","e","provider","PhoneSimulator","socialType","background","bubbleBackground","orientation","overflowY","backgroundColor","display","flexDirection","justifyContent","borderRadius","paddingLeft","paddingRight","borderStyle","borderWidth","wordBreak","whiteSpace","TELEGRAM","label","icon","MESSENGER","SMS","Home","setMessage","setMessageProviderLabel","setMessageProviderIcon","setMaxChar","template","setTemplate","showSuccessAlert","setShowSuccessAlert","timer","setTimeout","clearTimeout","sendMessage","messageResult","messageId","object","cancelSend","info","routes","path","exact","private","redirects","from","Redirects","redirectList","redirect","v4","PrivateRoute","useSelector","App","store","route","Boolean","hostname","match","initialState","combineReducers","action","configureStore","middlewares","createLogger","thunk","composedEnhancers","compose","applyMiddleware","persistedState","serializedState","loadState","createStore","rootReducer","subscribe","throttle","stringify","setItem","saveState","getState","firebase","apiKey","databaseURL","storageBucket","setPersistence","Auth","Persistence","LOCAL","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8bbaafa0.chunk.js","sourcesContent":["import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"error404\">\n    <span className=\"error404__path-invalid\">\n      page not found\n    </span>\n  </div>\n);\nexport default NotFound;\n","/* eslint-disable */\nimport { database } from 'firebase/app';\nimport moment from 'moment';\n\nexport const fetchAllMessage = async () => {\n  const databaseRef = database().ref('telegram').limitToLast(200);\n  return new Promise((resolve, reject) => {\n    try {\n      databaseRef.on('value', (snapshot) => {\n        const data = snapshot.val() || {};\n        const messages = [];\n        snapshot.forEach((child) => {\n          messages.push(child.val());\n        });\n        // it should trigger every time there are some changes happening\n        return resolve(messages.reverse());\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const postMessage = async (options) => {\n  const databaseRef = database().ref('telegram');\n  const result = await databaseRef.push({\n    message: options.message,\n    date: moment().format(),\n  }).then((snap) => snap.key);\n  return result;\n};\n","import axios from 'axios';\nimport { auth } from 'firebase/app';\nimport { fetchAllMessage, postMessage } from '../loader/db/db';\nimport { getToken } from './helpers';\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\nconst sendMessageOnMessenger = (options) => instance.post('/messenger', options);\nconst sendMessage = (options) => instance.post('/telegram', options);\nconst fetchMessages = (options) => instance.get('/messages', options);\nconst fetchAllMessages = () => fetchAllMessage();\nconst postNewMessage = (options) => postMessage(options);\nconst fetchUserInfo = (options) => instance.get('/me', options);\nconst login = (token) => auth().signInWithCustomToken(token);\nconst getIdTokenResult = () => auth().currentUser.getIdTokenResult();\nconst logout = () => auth().signOut();\nconst requestOtp = (phone) => instance.post('/auth', { phone });\nconst authenticateOtp = (phone, code) => instance.post('/auth', { phone, code });\n\nconst getMe = () => instance.get('/me');\n\nexport default {\n  sendMessageOnMessenger,\n  sendMessage,\n  fetchMessages,\n  fetchAllMessages,\n  postNewMessage,\n  fetchUserInfo,\n  login,\n  logout,\n  requestOtp,\n  authenticateOtp,\n  getMe,\n  getIdTokenResult,\n};\n","/* eslint-disable */\n// var csv is the CSV file with headers\nexport const csvToJSON = (csv) => {\n  const result = csvToJs(csv);\n\n  // return result; //JavaScript object\n  return JSON.stringify(result); // JSON\n};\n\nexport const csvToJs = (csv) => {\n  const lines = csv.split('\\n');\n\n  const result = [];\n\n  // NOTE: If your columns contain commas in their values, you'll need\n  // to deal with those before doing the next step\n  // (you might convert them to &&& or something, then covert them back later)\n  // jsfiddle showing the issue https://jsfiddle.net/\n  const headers = lines[0].split(',');\n\n  for (let i = 1; i < lines.length; i++) {\n    const obj = {};\n    const currentline = lines[i].split(',');\n\n    for (let j = 0; j < headers.length; j++) {\n      obj[headers[j]] = currentline[j];\n    }\n\n    result.push(obj);\n  }\n  return result;\n};\n\nexport const getToken = () => {\n  try {\n    const currentSession = JSON.parse(localStorage.getItem('state')).auth.token.token;\n\n    if (!currentSession) {\n      throw Error();\n    }\n    return currentSession;\n  } catch (err) {\n    return null;\n  }\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport english from './english';\nimport khmer from './khmer';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: english,\n      km: khmer,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\n\ni18n.changeLanguage('km-KH');\nexport default i18n;\n","export default {\n  translation: {\n    'Welcome to React': 'Welcome to React and react-i18next',\n    Outbox: 'Outbox',\n    Drafts: 'Drafts',\n    Text: 'Text',\n    'Text + buttons': 'Text + buttons',\n    'Image + buttons': 'Image + buttons',\n    'Style 1': 'Style 1',\n    'Style 2': 'Style 2',\n    'Style 3': 'Style 3',\n    app_title: 'COVID-19 Broadcasting System of The Kingdom of Cambodia',\n    logout_title: 'logout from system?',\n    cancel: 'Cancel',\n    reset: 'Reset',\n    send: 'Send',\n    ok: 'OK',\n    'Something went wrong': 'Something went wrong!',\n    'Are you sure you want to send': 'Are you sure you want to send this message?',\n    'send message': 'Send message to {{provider}}',\n    invalid_phone: 'Invalid phone number! Please check your phone number',\n    login_with_phone: 'Login with your phone number',\n    enter_otp: 'Enter your OTP you recieve from SMS',\n    phone_placeholder: 'e.g +855123456789',\n    otp_placeholder: '6 digits code',\n    send_code: 'Send Codes',\n    login: 'Login',\n    text_message: 'Text Message',\n  },\n};\n","export default {\n  translation: {\n    'Welcome to React': 'សូមស្វាគមន៍មកកាន់ React',\n    Outbox: 'ប្រអប់​ចេញ',\n    Drafts: 'សំណេរព្រៀង',\n    Text: 'អត្ថបទ',\n    'Text + buttons': 'អត្ថបទ + ប៊ូតុង',\n    'Image + buttons': 'រូបភាព + ប៊ូតុង',\n    'Style 1': 'លំនាំ​ ទី១',\n    'Style 2': 'លំនាំ ទី២',\n    'Style 3': 'លំនាំ ទី៣',\n    app_title: 'ប្រព័ន្ធផ្សព្វផ្សាយ COVID-19 នៃ​ព្រះ​រាជាណាចក្រ​កម្ពុជា',\n    logout_title: 'ចាកចេញពី ប្រព័ន្ធផ្សព្វផ្សាយ COVID-19?',\n    cancel: 'បោះបង់',\n    reset: 'លុបចោល',\n    send: 'ផ្ញើ',\n    ok: 'បាទ/ចាស',\n    'Something went wrong': 'ប្រព័ន្ធផ្សព្វផ្សាយ',\n    'Are you sure you want to send': 'ប្រព័ន្ធផ្សព្វផ្សាយ',\n    'send message': 'ផ្ញើសារទៅកាន់​ {{provider}}',\n    invalid_phone: 'លេខទូរស័ព្ទមិនត្រឹមត្រូវ! សូមពិនិត្យម្ដងទៀត...',\n    login_with_phone: 'ចូលប្រើដោយលេខទូរស័ព្ទ',\n    enter_otp: 'បញ្ជូលលេខសម្ងាត់',\n    phone_placeholder: 'ឧ +៨៥៥១២៣៤៥៦៧៨៩',\n    otp_placeholder: 'លេខសម្ងាត់៦ខ្ទង់',\n    send_code: 'ផ្ញើលេខសម្ងាត់',\n    login: 'ចូលប្រើ',\n    text_message: 'សារ',\n  },\n};\n","import React, { Component } from 'react';\nimport { Button, InputNumber, Layout, Card, Form, Alert, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\nimport { UserOutlined } from '@ant-design/icons';\nimport api from '../../utils/api';\nimport localization from '../../localization';\nimport { savePhone as _savePhone } from '../../redux/actions/auth';\n\nconst showError = (err) => {\n  Modal.error({\n    title: err,\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n  });\n};\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phone: '855',\n      isLoading: false,\n      error: null,\n      phoneError: false,\n      codeSent: false,\n      code: '',\n    };\n    this.requestOtp = this.requestOtp.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.authenticateOtp = this.authenticateOtp.bind(this);\n    this.handleOtpChange = this.handleOtpChange.bind(this);\n  }\n\n  async requestOtp() {\n    const { phone, phoneError } = this.state;\n    if (phoneError) {\n      showError(localization.t('invalid_phone'));\n      return;\n    }\n    this.setState({\n      isLoading: true,\n    });\n    try {\n      const result = await api.requestOtp(`+${phone}`);\n      console.log('result', result);\n\n      const { savePhone } = this.props;\n      savePhone(phone);\n\n      this.setState({\n        codeSent: true,\n        isLoading: false,\n      });\n    } catch (err) {\n      this.setState({\n        isLoading: false,\n        error: err.response.data,\n      });\n    }\n  }\n\n  async authenticateOtp() {\n    const { code, phone } = this.state;\n    try {\n      const result = await api.authenticateOtp(`+${phone}`, code);\n      const { saveAuthToken, history } = this.props;\n      await api.login(result.data.data.customToken);\n      const token = await api.getIdTokenResult();\n      saveAuthToken(token);\n      history.push('/');\n    } catch (error) {\n      console.log('error.response', error.response.data);\n\n      this.setState({\n        error: error.response.data,\n      });\n    }\n  }\n\n  handleOtpChange(value) {\n    this.setState({\n      code: value,\n    });\n  }\n\n  handleInputChange(value) {\n    const { phone } = this.state;\n    console.log('!value || value.length < 11', !value || value.length < 11);\n    console.log('phone', phone);\n\n    this.setState({\n      phone: value ? `${value}` : '855',\n      phoneError: !phone || phone.length < 11,\n    });\n  }\n\n  render() {\n    const { phone, isLoading, code, error, phoneError, codeSent } = this.state;\n    const { t } = this.props;\n    return (\n      <Layout\n        style={{ minHeight: '100vh', backgroundImage: 'url(/login-image.jpg)' }}\n        className=\"flex flex-grow justify-center items-center\"\n      >\n        {\n                    !codeSent ? (\n                      <Card\n                        style={{ width: 500, minHeight: '38vh' }}\n                        className=\"flex flex-col\"\n                      >\n                        <h1 className=\"py-1 pb-4 text-xl\" style={{ fontSize: '1.825em', fontWeight: 'bold' }}>{t('app_title')}</h1>\n                        <h3 className=\"py-1 pb-6 text-lg\" style={{ fontSize: '1.825em', fontWeight: 'bold' }}>{t('login_with_phone')}</h3>\n                        <Form\n                          className=\"flex flex-grow flex-col\"\n                        >\n\n                          <InputNumber\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                            className=\"py-1 w-full\"\n                            placeholder={t('phone_placeholder')}\n                            name=\"phone\"\n                            defaultValue=\"855\"\n                            maxLength=\"13\"\n                            value={phone}\n                            type=\"text\"\n                            onChange={this.handleInputChange}\n                          />\n\n                          <Button\n                            className=\"btn-round my-2 flex flex-grow items-center justify-center\"\n                            type=\"button\"\n                            onClick={this.requestOtp}\n                            loading={isLoading}\n                          >\n                            {t('send_code')}\n                          </Button>\n                          {\n                                    phoneError && <Alert className=\"my-2\" message={t('invalid_phone')} type=\"warning\" showIcon banner closable />\n                                }\n                          {\n                                        error && <Alert className=\"my-2\" message={error.message} type=\"warning\" showIcon banner closable />\n                                    }\n                        </Form>\n\n                      </Card>\n                    ) : (\n                      <Card\n                        style={{ width: 500, minHeight: '38vh' }}\n                        className=\"flex flex-col\"\n                      >\n                        <h1 className=\"py-1 pb-4 text-xl\" style={{ fontSize: '1.825em', fontWeight: 'bold' }}>{t('app_title')}</h1>\n                        <h3 className=\"py-1 pb-6 text-lg\" style={{ fontSize: '1.825em', fontWeight: 'bold' }}>{t('enter_otp')}</h3>\n\n                        <Form\n                          className=\"flex flex-grow flex-col\"\n                        >\n\n                          <InputNumber\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                            className=\"py-1 w-full\"\n                            placeholder={t('otp_placeholder')}\n                            name=\"code\"\n                            defaultValue=\"855\"\n                            maxLength=\"13\"\n                            value={code}\n                            type=\"text\"\n                            onChange={this.handleOtpChange}\n                          />\n\n                          <Button\n                            className=\"btn-round my-2 flex flex-grow items-center justify-center\"\n                            type=\"button\"\n                            onClick={this.authenticateOtp}\n                            loading={isLoading}\n                          >\n                            {t('login')}\n                          </Button>\n                          {\n                                        error && <Alert className=\"my-2\" message={error.message} type=\"error\" showIcon banner closable />\n                                    }\n                        </Form>\n\n                      </Card>\n                    )\n                }\n      </Layout>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ auth: state.auth });\n\nconst mapDispatchToProps = (dispatch) => ({\n  savePhone: (phone) => {\n    dispatch(_savePhone(phone));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation()(withRouter(Login)));\n","import api from '../../utils/api';\nimport { VALIDATE_TOKEN_START, VALIDATE_TOKEN_SUCCESS, VALIDATE_TOKEN_FAIL, SAVE_AUTH_TOKEN, SAVE_PHONE } from '../types/types';\n\nexport const validateToken = () => async (dispatch) => {\n  dispatch(validateTokenStarted());\n  try {\n    const res = await api.getMe();\n    dispatch(validateTokenSuccess(res.data));\n  } catch (error) {\n    dispatch(validateTokenFail(error));\n  }\n};\n\nexport const saveAuthToken = (token) => (dispatch) => {\n  dispatch({\n    type: SAVE_AUTH_TOKEN,\n    payload: token,\n  });\n};\n\nexport const savePhone = (phone) => (dispatch) => {\n  dispatch({\n    type: SAVE_PHONE,\n    payload: phone,\n  });\n};\n\n\nconst validateTokenStarted = () => ({\n  type: VALIDATE_TOKEN_START,\n});\n\nconst validateTokenSuccess = () => ({\n  type: VALIDATE_TOKEN_SUCCESS,\n});\n\nconst validateTokenFail = (error) => ({\n  type: VALIDATE_TOKEN_FAIL,\n  payload: {\n    error,\n  },\n});\n","\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL';\n\nexport const ON_MESSAGE_RESET = 'ON_MESSAGE_RESET';\nexport const ON_MESSAGE_CHANGE = 'ON_MESSAGE_CHANGE';\n\nexport const VALIDATE_TOKEN_START = 'VALIDATE_TOKEN_START';\nexport const VALIDATE_TOKEN_SUCCESS = 'VALIDATE_TOKEN_SUCCESS';\nexport const VALIDATE_TOKEN_FAIL = 'VALIDATE_TOKEN_FAIL';\nexport const SAVE_AUTH_TOKEN = 'SAVE_AUTH_TOKEN';\nexport const SAVE_PHONE = 'SAVE_PHONE';\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n} from 'reactstrap';\nimport { withRouter } from 'react-router';\nimport { saveAuthToken as _saveAuthToken } from '../../redux/actions/auth';\nimport api from '../../utils/api';\n\n// core components\n\nclass OTP extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: '',\n    };\n    this.authenticateOtp = this.authenticateOtp.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async authenticateOtp() {\n    const { auth } = this.props;\n    const { code } = this.state;\n    try {\n      const result = await api.authenticateOtp(auth.phone, code);\n      console.log('authenticateOtp', result);\n      console.log('result.data.data.customToken', result.data.data.customToken);\n      const { saveAuthToken, history } = this.props;\n      await api.login(result.data.data.customToken);\n      const token = await api.getIdTokenResult();\n      console.log('token', token);\n      saveAuthToken(token);\n      history.push('/');\n    } catch (error) {\n      console.log('error', error);\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { code } = this.state;\n    return (\n      <div\n        className=\"section section-image section-login\"\n        style={{\n          backgroundImage: 'url(/login-image.jpg)',\n        }}\n      >\n        <Container>\n          <Row style={{ paddingTop: '30px' }}>\n            <Col className=\"mx-auto\" lg=\"4\" md=\"6\">\n              <Card className=\"card-register\">\n                <h3 className=\"title mx-auto\" style={{ fontSize: '1.825em', fontWeight: 'bold' }}>Please input your OTP</h3>\n                <Form className=\"register-form\">\n                  <label>OTP</label>\n                  <InputGroup className=\"form-group-no-border\">\n                    <InputGroupAddon addonType=\"prepend\">\n                      <InputGroupText>\n                        <i className=\"nc-icon nc-mobile\" />\n                      </InputGroupText>\n                    </InputGroupAddon>\n                    <Input placeholder=\"OTP\" type=\"number\" name=\"code\" value={code} onChange={this.handleInputChange} />\n                  </InputGroup>\n                  <Button\n                    block\n                    onClick={this.authenticateOtp}\n                    className=\"btn-round\"\n                    color=\"danger\"\n                    type=\"button\"\n                  >\n                    Login\n                  </Button>\n                </Form>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ auth: state.auth });\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveAuthToken: (token) => {\n    dispatch(_saveAuthToken(token));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OTP));\n","import React from 'react';\nimport Icon from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst { Sider } = Layout;\n\nconst { SubMenu } = Menu;\n\nconst SiderNavigation = () => {\n  const { t } = useTranslation();\n  return (\n    <Sider>\n      <div style={{ width: '100px', margin: '20px 0px 20px 0px', transform: `translate(${50}%` }}>\n          <Link to=\"/\">\n            <img className=\"h-full w-full border border-solid border-white rounded-sm cursor-pointer\" src=\"/flag-cambodia.jpg\" alt=\"Khmer\" />\n          </Link>\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"inline\"\n        style={{ height: '100%', borderRight: 0 }}\n      >\n        <SubMenu\n          key=\"messages\"\n          title={(\n            <span>\n              <Icon component={() => (<img src=\"/mail.svg\" alt=\"message\" />)} />\n              Messages\n            </span>\n            )}\n        >\n          <Menu.Item key=\"outbox\"><Link to=\"/outbox\">{t('Outbox')}</Link></Menu.Item>\n          <Menu.Item key=\"draft\"><Link to=\"/drafts\">{t('Drafts')}</Link></Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"messenger\"\n          title={(\n            <span>\n              <Icon component={() => (<img src=\"/messenger.svg\" alt=\"messenger\" />)} />\n              Messenger\n            </span>\n            )}\n        >\n          <Menu.Item key=\"text-only\"><Link to=\"/messenger-text\">{t('Text')}</Link></Menu.Item>\n          <Menu.Item key=\"text-with-button\"><Link to=\"/messenger-text-button\">{t('Text + buttons')}</Link></Menu.Item>\n          <Menu.Item key=\"image-with-button\"><Link to=\"/messenger-image-button\">{t('Image + buttons')}</Link></Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"telegram\"\n          title={(\n            <span>\n              <Icon component={() => (<img src=\"/telegram.svg\" alt=\"telegram\" />)} />\n              Telegram\n            </span>\n            )}\n        >\n          <Menu.Item key=\"style-1\"><Link to=\"/telegram-style-1\">{t('Style 1')}</Link></Menu.Item>\n          <Menu.Item key=\"style-2\"><Link to=\"/telegram-style-2\">{t('Style 2')}</Link></Menu.Item>\n          <Menu.Item key=\"style-3\"><Link to=\"/telegram-style-3\">{t('Style 3')}</Link></Menu.Item>\n        </SubMenu>\n        <SubMenu\n          key=\"sms\"\n          title={(\n            <span>\n              <Icon component={() => (<img src=\"/sms.svg\" alt=\"sms\" />)} />\n              SMS\n            </span>\n            )}\n        >\n          <Menu.Item key=\"sms-text\"><Link to=\"/sms-text\">{t('Text')}</Link></Menu.Item>\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n};\n\nexport default SiderNavigation;\n","import React from 'react';\nimport { Avatar, Popover, Menu } from 'antd';\n\n\nconst UserMenu = ({ openKeys, onOpenChange }) => (\n  <Menu\n    mode=\"inline\"\n    openKeys={openKeys}\n    onOpenChange={onOpenChange}\n    style={{ width: 256 }}\n  >\n    <Menu.Item key=\"1\">Option 1</Menu.Item>\n    <Menu.Item key=\"2\">Option 2</Menu.Item>\n    <Menu.Item key=\"3\">Option 3</Menu.Item>\n    <Menu.Item key=\"4\">Option 4</Menu.Item>\n  </Menu>\n);\nconst AvatarPanel = ({ image, name, className }) => (\n  <Popover content={<UserMenu openKeys={['123']} />} trigger=\"click\">\n    <div className={`flex flex-row avatar-info-panel items-center hover:bg-gray-800 cursor-pointer ${className}`}>\n      <h4 className=\"text-white p-2 m-0\">{name}</h4>\n      <Avatar size=\"large\" src={image} />\n    </div>\n  </Popover>\n);\n\nexport default AvatarPanel;\n","import React from 'react';\nimport i18next from \"i18next\";\n\nconst changeLanguage = (lang) => {\n  console.log('lang', lang);\n  i18next.changeLanguage(lang);\n};\n\nconst LanguageSwitcher = () => {\n    return(\n        <div className=\"langauge-switcher flex flex-row\">\n            <div className=\"img-wrapper w-6 h-4 mx-1 border border-solid border-white rounded-sm cursor-pointer\" onClick={() => changeLanguage('km')}>\n                <img className=\"h-full w-full\" src=\"/flag-cambodia.jpg\" alt=\"Khmer\"/>\n            </div>\n            <div className=\"img-wrapper w-6 h-4 mx-1 border border-solid border-white rounded-sm cursor-pointer\" onClick={() => changeLanguage('en')}>\n                <img className=\"h-full w-full\" src=\"/flag-british.jpg\" alt=\"English\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default LanguageSwitcher;\n","import React from 'react';\nimport { Layout, Divider, Modal } from 'antd';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\n\n\nimport AvatarPanel from '../AvatarPanel/AvatarPanel';\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher';\nimport api from '../../utils/api';\n\nconst { confirm } = Modal;\n\nconst showConfirm = (title, okText, cancelText) => {\n  confirm({\n    title,\n    // content: 'Some descriptions',\n    async onOk() {\n      await api.logout();\n      localStorage.clear();\n      window.location.href = '/';\n    },\n    onCancel() {\n      console.log('Cancel');\n    },\n    okText,\n    cancelText,\n  });\n};\n\n\nconst { Header: AntHeader } = Layout;\nconst Header = ({ image = '', name = 'John Doe' }) => {\n  const { t } = useTranslation();\n\n  return (\n    <AntHeader className=\"flex flex-row items-center overflow-hidden  p-8\" style={{ padding: 0 }}>\n      <h1 className=\"text-white text-xl mr-auto\">{t('app_title')}</h1>\n      <LanguageSwitcher />\n      <AvatarPanel image={image} name={name} className=\"px-2\" />\n      <Divider type=\"vertical\" className=\"h-10\" />\n      <PoweroffOutlined className=\"text-xl text-white px-2 cursor-pointer\" onClick={() => showConfirm(t('logout_title'), t('ok'), t('cancel'))} />\n    </AntHeader>\n  );\n};\n\nexport default Header;\n","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport SiderNavigation from \"./Sider\";\nimport Header from \"../Header/Header\";\nconst { Content } = Layout;\n\nexport default class SiderLayout extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapsed: false,\n\n    }\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <SiderNavigation width={200} className=\"site-layout-background\" />\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n          <Content style={{ margin: '0 16px' }}>\n              { this.props.children}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, Button, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport './SectionTab.scss';\nimport Icon from '@ant-design/icons';\nimport { Modal, Spin } from 'antd';\nimport API from '../../utils/api';\nimport localization from '../../localization';\n\n\nconst error = (err) => {\n  Modal.error({\n    title: localization.t('Something went wrong'),\n    content: err.message,\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n  });\n};\n\nconst SectionTab = () => {\n  const [allMessages, setAllMessage] = useState([]);\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('1');\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = useCallback(async () => {\n    try {\n      const data = await API.fetchAllMessages();\n      console.log('data', data);\n      setIsLoading(false);\n      setError(null);\n      setAllMessage(data);\n    } catch (err) {\n      setError(err);\n      error(err);\n      setIsLoading(false);\n    }\n  }, [isLoading, allMessages]);\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n  };\n\n  return (\n    isLoading ? (\n      <div className=\"section-spinner\">\n        <Spin />\n      </div>\n    ) : (\n      <div className=\"main-section-tab\">\n        <Row>\n          <Col xs=\"6\" sm=\"4\" md=\"4\" className=\"section-cols section-cols-scroll\">\n            <Nav tabs vertical pills>\n              {(\n                allMessages.map((item, index) => (\n                  <NavItem className=\"section-nav-item\" key={index.toString}>\n                    <Button\n                      className={classnames('toggleButton', { active: activeTab === index.toString() })}\n                      onClick={() => {\n                        toggle(index.toString());\n                      }}\n                    >\n                      <Row className=\"section-sub-row\">\n                        <Col lg=\"3\" className=\"section-sub-col-left\">\n                          <Icon component={() => (<img src=\"/telegram.svg\" alt=\"telegram\" />)} />\n                          <p className=\"section-sub-p\">{moment(item.date).format('HH:mm')}</p>\n                          <p className=\"section-sub-p\">{moment(item.date).format('DD-MM-YYYY')}</p>\n                        </Col>\n                        <Col lg=\"9\" className=\"section-sub-col-right\">\n                          <p className=\"section-sub-p section-sub-p-overflow text-black\">{item.message}</p>\n                        </Col>\n                      </Row>\n                    </Button>\n                  </NavItem>\n                ))\n            )}\n            </Nav>\n          </Col>\n          <Col xs=\"6\" sm=\"6\" md=\"6\" className=\"section-cols section-cols-right\">\n            <TabContent activeTab={activeTab}>\n              {(\n                allMessages.map((item, index) => (\n                  <TabPane tabId={index.toString()} key={index.toString()}>\n                    <div className=\"section-tab-container\">\n                      <Row>\n                        <Col lg=\"2\">\n                          <Icon style={{ fontSize: '10' }} component={() => (<img src=\"/telegram.svg\" alt=\"telegram\" />)} />\n                        </Col>\n                        <Col lg=\"1\">\n                          <p className=\"section-sub-p\" />\n                        </Col>\n                        <Col lg=\"2\">{localization.t('text_message')}</Col>\n                        <Col lg=\"4\">\n                          <p className=\"section-sub-p\">{moment(item.date).format('HH:mm DD-MM-YYYY')}</p>\n                        </Col>\n                      </Row>\n                      <hr className=\"my-2\" style={{ borderColor: '#000', fontSize: '2px', borderTopWidth: '2px' }} />\n                      <p className=\"section-sub-p section-sub-scroll\">{item.message}</p>\n                    </div>\n                  </TabPane>\n                ))\n            )}\n            </TabContent>\n          </Col>\n        </Row>\n      </div>\n    )\n  );\n};\n\nexport default SectionTab;\n","import React from 'react';\nimport SiderLayout from '../../components/Sider/SiderLayout';\n\nimport SectionTab from '../index-sections/SectionTab.jsx';\n\nconst Outbox = () => (\n  <SiderLayout>\n    <div className=\"content flex flex-row h-full\">\n      <SectionTab />\n    </div>\n  </SiderLayout>\n);\n\nexport default Outbox;\n","import React from 'react';\nimport { Button, Input, Alert } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\n\nconst { TextArea } = Input;\n\nconst MessageProvider = ({ messageProviderIcon, messageProviderLabel }) => (\n  <div className=\"message-provider flex flex-row justify-start items-center\">\n    <img className=\"p-2\" src={messageProviderIcon} alt={messageProviderLabel} />\n    <p className=\"p-2 font-semibold\">{messageProviderLabel}</p>\n  </div>\n);\n\nconst MessageForm = ({ messenger, onMessageChange, message = '', onSend, onCancel, className, isSuccess, disabled }) => {\n  const { t } = useTranslation();\n  const { messageProviderLabel, messageProviderIcon, maxChar } = messenger;\n\n  return (\n    <div style={{ height: '80%' }} className={`message-form flex flex-col ${className}`}>\n      {\n        isSuccess && <Alert className=\"mb-2\" message={t('Message sent')} type=\"success\" showIcon banner closable />\n      }\n\n      <div className=\"message-provider\">\n        <MessageProvider\n          messageProviderLabel={messageProviderLabel}\n          messageProviderIcon={messageProviderIcon}\n        />\n      </div>\n      <div className=\"characters-counter top-0 right-0 pt-2 flex justify-end\">\n        {`${message.length}/${maxChar}`}\n      </div>\n      <div className=\"textarea-container flex-grow h-auto \">\n        <TextArea\n          autoSize\n          className=\"h-full w-full  p-4 border-2 border-solid border-blue-dark rounded-md\"\n          style={{ resize: 'none' }}\n          value={message}\n          maxLength={maxChar}\n          onChange={(e) => onMessageChange(e)}\n          disabled={disabled}\n          placeholder={t('send message', { provider: messageProviderLabel })}\n        />\n      </div>\n      <div className=\"message-form__buttons flex flex-row items-center justify-end p-2 pr-0\">\n        <Button\n          className=\"m-2 text-blue-dark border-2 border-blue-dark rounded-md hover:text-white hover:bg-blue\"\n          onClick={onCancel}\n          disabled={disabled}\n        >\n          {t('cancel')}\n\n        </Button>\n        <Button\n          className=\"m-2 mr-0 text-white border-2 border-blue-dark bg-blue-dark rounded-md hover:text-white hover:bg-blue\"\n          onClick={onSend}\n          type=\"primary\"\n          disabled={disabled || !message}\n        >\n          {t('send')}\n\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageForm;\n","import React from 'react';\nimport 'html5-device-mockups/dist/device-mockups.min.css';\nimport { IPhone7 } from 'react-device-mockups';\n\nconst PhoneSimulator = ({ className, type, messages }) => {\n  let socialType;\n  switch (type) {\n    case 'telegram': socialType = { background: '#19B7EA', bubbleBackground: '#fff' }; break;\n    case 'messenger': socialType = { background: '#f1f0f0', bubbleBackground: '#d3d3d3' }; break;\n    default: socialType = { background: '#fff', bubbleBackground: '#d3d3d3' }; break;\n  }\n  return (\n    <div className={`virtual-device ${className}`}>\n      <IPhone7\n        height={500}\n        orientation=\"portrait\"\n        color=\"black\"\n      >\n        <div style={{ height: '100%',\n          overflowY: 'scroll',\n          backgroundColor: socialType.background,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-end' }}\n        >\n          <div style={{\n            fontSize: 10,\n            borderRadius: 8,\n            display: 'flex',\n            paddingTop: 5,\n            paddingLeft: 10,\n            paddingRight: 10,\n            minHeight: 20,\n            margin: '0 40px 8px 8px',\n            borderStyle: 'solid',\n            borderWidth: '1px',\n            backgroundColor: socialType.bubbleBackground,\n            wordBreak: 'break-word',\n            whiteSpace: 'pre-wrap',\n          }}\n          >\n            <span>{messages}</span>\n          </div>\n        </div>\n      </IPhone7>\n    </div>\n  );\n};\n\nexport default PhoneSimulator;\n","export const TELEGRAM = {\n  key: 'telegram',\n  label: 'Telegram',\n  maxChar: 4096,\n  icon: '/telegram.svg',\n};\n\nexport const MESSENGER = {\n  key: 'messenger',\n  label: 'Messenger',\n  maxChar: 300,\n  icon: '/messenger.svg',\n  template: '',\n};\n\nexport const SMS = {\n  key: 'sms',\n  label: 'SMS',\n  maxChar: 300,\n  icon: '/sms.svg',\n  template: '',\n};\n","/* eslint-disable import/no-named-as-default-member */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport SiderLayout from '../../components/Sider/SiderLayout';\nimport MessageForm from '../../components/MessageForm/MessageForm';\nimport PhoneSimulator from '../../components/PhoneSimulator/phoneSimulator';\nimport API from '../../utils/api';\nimport localization from '../../localization';\nimport { TELEGRAM, MESSENGER, SMS } from '../../utils/constants';\n\n\nconst error = (err) => {\n  Modal.error({\n    title: localization.t('Something went wrong'),\n    content: err.message,\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n  });\n};\nconst info = (sendMessage, cancelSend) => {\n  Modal.confirm({\n    title: localization.t('Are you sure you want to send'),\n    onOk() {\n      sendMessage();\n    },\n    onCancel() {\n      cancelSend();\n    },\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n    cancelText: localization.t('cancel'),\n\n  });\n};\n\nconst Home = () => {\n  const messageProvider = 'telegram';\n\n  const [message, setMessage] = useState('');\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageProviderLabel, setMessageProviderLabel] = useState('');\n  const [messageProviderIcon, setMessageProviderIcon] = useState('');\n  const [maxChar, setMaxChar] = useState(100);\n  const [template, setTemplate] = useState('');\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n\n  useEffect(() => {\n    if (messageProvider === TELEGRAM.key) {\n      setMessageProviderLabel(TELEGRAM.label);\n      setMessageProviderIcon(TELEGRAM.icon);\n      setMaxChar(TELEGRAM.maxChar);\n      setTemplate(TELEGRAM.template);\n    } else if (messageProvider === MESSENGER.key) {\n      setMessageProviderLabel(MESSENGER.label);\n      setMessageProviderIcon(MESSENGER.icon);\n      setMaxChar(MESSENGER.maxChar);\n      setTemplate(MESSENGER.template);\n    } else if (messageProvider === SMS.key) {\n      setMessageProviderLabel(MESSENGER.label);\n      setMessageProviderIcon(MESSENGER.icon);\n      setMaxChar(SMS.maxChar);\n      setTemplate(SMS.template);\n    }\n\n\n    return () => {\n      setMessageProviderLabel('');\n      setMessageProviderIcon('');\n      setMaxChar(100);\n      setTemplate('');\n    };\n  }, [messageProvider]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (showSuccessAlert) {\n        setShowSuccessAlert(false);\n      }\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [showSuccessAlert]);\n\n\n  const sendMessage = useCallback(async () => {\n    if (isLoading) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const messageResult = await postMessage({ message });\n      const result = await API.sendMessage({ messageId: messageResult });\n      console.log('save data for history?', result);\n      console.log('or trigger fetch messages');\n\n      setIsLoading(false);\n      setError(null);\n      setMessage('');\n      setShowSuccessAlert(true);\n    } catch (err) {\n      setError(err);\n      error(err);\n      setIsLoading(false);\n    }\n  }, [isLoading, message]);\n\n  const postMessage = useCallback(async (object) => {\n    try {\n      const data = await API.postNewMessage({ message: object.message });\n      setIsLoading(false);\n      setError(null);\n      return data;\n    } catch (err) {\n      setError(err);\n      error(err);\n      setIsLoading(false);\n    }\n  }, []);\n\n  const cancelSend = useCallback(() => {\n    setIsLoading(false);\n    setIsLoading(false);\n    setError(null);\n  }, []);\n\n  const messenger = {\n    messageProviderLabel,\n    messageProviderIcon,\n    maxChar,\n    template,\n  };\n  return (\n    <SiderLayout>\n      <div className=\"content flex flex-row h-full\">\n        <MessageForm\n          className=\"flex-grow p-4\"\n          messenger={messenger}\n          onMessageChange={(e) => setMessage(e.target.value)}\n          message={message}\n          onSend={() => info(sendMessage, cancelSend)}\n          onCancel={() => setMessage('')}\n          disabled={isLoading}\n          isSuccess={showSuccessAlert}\n        />\n        <PhoneSimulator\n          className=\"flex-grow p-4\"\n          type={messageProvider}\n          messages={message}\n        />\n      </div>\n    </SiderLayout>\n  );\n};\n\nexport default Home;\n","/* eslint-disable import/no-named-as-default-member */\nimport React, { useState, useCallback, useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { Modal } from 'antd';\nimport SiderLayout from '../../components/Sider/SiderLayout';\nimport MessageForm from '../../components/MessageForm/MessageForm';\nimport PhoneSimulator from '../../components/PhoneSimulator/phoneSimulator';\nimport API from '../../utils/api';\nimport localization from '../../localization';\nimport { TELEGRAM, MESSENGER, SMS } from '../../utils/constants';\n\n\nconst error = (err) => {\n  Modal.error({\n    title: localization.t('Something went wrong'),\n    content: err.message,\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n  });\n};\nconst info = (sendMessage, cancelSend) => {\n  Modal.confirm({\n    title: localization.t('Are you sure you want to send'),\n    onOk() {\n      sendMessage();\n    },\n    onCancel() {\n      cancelSend();\n    },\n    className: 'border-2 border-blue-dark rounded-md p-0',\n    okText: localization.t('ok'),\n    cancelText: localization.t('cancel'),\n\n  });\n};\n\nconst Messenger = () => {\n  const messageProvider = 'messenger';\n\n  const [message, setMessage] = useState('');\n  const [, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [messageProviderLabel, setMessageProviderLabel] = useState('');\n  const [messageProviderIcon, setMessageProviderIcon] = useState('');\n  const [maxChar, setMaxChar] = useState(100);\n  const [template, setTemplate] = useState('');\n  const [showSuccessAlert, setShowSuccessAlert] = useState(false);\n\n  useEffect(() => {\n    if (messageProvider === TELEGRAM.key) {\n      setMessageProviderLabel(TELEGRAM.label);\n      setMessageProviderIcon(TELEGRAM.icon);\n      setMaxChar(TELEGRAM.maxChar);\n      setTemplate(TELEGRAM.template);\n    } else if (messageProvider === MESSENGER.key) {\n      setMessageProviderLabel(MESSENGER.label);\n      setMessageProviderIcon(MESSENGER.icon);\n      setMaxChar(MESSENGER.maxChar);\n      setTemplate(MESSENGER.template);\n    } else if (messageProvider === SMS.key) {\n      setMessageProviderLabel(MESSENGER.label);\n      setMessageProviderIcon(MESSENGER.icon);\n      setMaxChar(SMS.maxChar);\n      setTemplate(SMS.template);\n    }\n\n\n    return () => {\n      setMessageProviderLabel('');\n      setMessageProviderIcon('');\n      setMaxChar(100);\n      setTemplate('');\n    };\n  }, [messageProvider]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (showSuccessAlert) {\n        setShowSuccessAlert(false);\n      }\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [showSuccessAlert]);\n\n\n  const sendMessage = useCallback(async () => {\n    if (isLoading) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const messageId = await postMessage({ message });\n      const result = await API.sendMessageOnMessenger({ messageId });\n      // const result = await API.sendMessage({ messageId: messageResult });\n      console.log('save data for history?', result);\n      console.log('or trigger fetch messages');\n\n      setIsLoading(false);\n      setError(null);\n      setMessage('');\n      setShowSuccessAlert(true);\n    } catch (err) {\n      setError(err);\n      error(err);\n      setIsLoading(false);\n    }\n  }, [isLoading, message]);\n\n  const postMessage = useCallback(async (object) => {\n    try {\n      const data = await API.postNewMessage({ message: object.message });\n      setIsLoading(false);\n      setError(null);\n      return data;\n    } catch (err) {\n      setError(err);\n      error(err);\n      setIsLoading(false);\n    }\n  }, []);\n\n  const cancelSend = useCallback(() => {\n    setIsLoading(false);\n    setIsLoading(false);\n    setError(null);\n  }, []);\n\n  const messenger = {\n    messageProviderLabel,\n    messageProviderIcon,\n    maxChar,\n    template,\n  };\n  return (\n    <SiderLayout>\n      <div className=\"content flex flex-row h-full\">\n        <MessageForm\n          className=\"flex-grow p-4\"\n          messenger={messenger}\n          onMessageChange={(e) => setMessage(e.target.value)}\n          message={message}\n          onSend={() => info(sendMessage, cancelSend)}\n          onCancel={() => setMessage('')}\n          disabled={isLoading}\n          isSuccess={showSuccessAlert}\n        />\n        <PhoneSimulator\n          className=\"flex-grow p-4\"\n          type={messageProvider}\n          messages={message}\n        />\n      </div>\n    </SiderLayout>\n  );\n};\n\nexport default Messenger;\n","import '../assets/css/bootstrap.min.css';\nimport '../assets/scss/paper-kit.scss';\nimport '../assets/demo/demo.css';\n// Misc routes\nimport NotFound from '../components/NotFound/NotFound';\nimport Login from '../views/Login/Login';\nimport OTP from '../views/OTP/OTP';\nimport Outbox from '../views/Outbox/Outbox';\nimport Home from '../views/Home/Home';\nimport Messenger from '../views/Messenger/Messenger';\n// Register Routes\n\n// Application routes\nconst routes = [\n  { path: '/', component: Home, exact: true, private: true },\n  { path: '/login', component: Login, exact: true },\n  { path: '/otp', component: OTP, exact: true },\n  { path: '/outbox', component: Outbox, exact: true },\n  { path: '/messenger-text', component: Messenger, exact: true },\n  { path: '/telegram-style-1', component: Home, exact: true },\n  { component: NotFound },\n];\n\nconst redirects = [\n  {\n    from: '/test',\n    to: '/',\n    exact: true,\n  },\n];\n\n\nexport {\n  redirects,\n  routes,\n};\n","import React from 'react';\nimport { Provider, useSelector } from 'react-redux';\nimport v4 from 'uuid/v4';\n// import Favicon from 'react-favicon';\nimport { Route, Redirect, Switch, BrowserRouter } from 'react-router-dom';\n\nimport { routes, redirects } from './utils/routes';\nimport './App.css';\n\nconst Redirects = ({ redirectList }) => redirectList.map((redirect) => (\n  <Redirect from={redirect.from.toString()} to={redirect.to.toString()} exact={redirect.exact} key={v4()} />\n));\nconst PrivateRoute = (props) => {\n  const { path } = props;\n\n  return useSelector((state) => state.auth.token) ? <Route {...props} />\n    : <Redirect from={path} to=\"/login\" />;\n};\nconst App = ({ store }) => (\n  <BrowserRouter>\n    <Provider store={store}>\n      <Switch>\n        {\n            routes.map((route, index) => (\n              route.private ? <PrivateRoute key={index.toString()} {...route} store={store} />\n                : <Route key={index.toString()} {...route} store={store} />\n            ))\n          }\n        <Redirects redirectList={redirects} />\n      </Switch>\n    </Provider>\n  </BrowserRouter>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SEND_MESSAGE_SUCCESS, SEND_MESSAGE, SEND_MESSAGE_FAIL, ON_MESSAGE_CHANGE, ON_MESSAGE_RESET } from '../types/types';\n\nconst initialState = {\n  loading: false,\n  message: '',\n  error: null,\n};\nexport default function totalConfirmed(state = initialState, action) {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ON_MESSAGE_CHANGE:\n      return {\n        ...state,\n        message: action.payload,\n      };\n    case ON_MESSAGE_RESET:\n      return {\n        ...state,\n        message: '',\n      };\n    case SEND_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        message: '',\n      };\n    case SEND_MESSAGE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n    default:\n      return state;\n  }\n}\n","import { VALIDATE_TOKEN_START, VALIDATE_TOKEN_SUCCESS, VALIDATE_TOKEN_FAIL, SAVE_AUTH_TOKEN, SAVE_PHONE } from '../types/types';\n\nconst initialState = {\n  loading: false,\n  token: '',\n  phone: '',\n  error: null,\n};\nexport default function totalConfirmed(state = initialState, action) {\n  switch (action.type) {\n    case SAVE_AUTH_TOKEN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    case SAVE_PHONE:\n      return {\n        ...state,\n        phone: action.payload,\n      };\n    case VALIDATE_TOKEN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case VALIDATE_TOKEN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    case VALIDATE_TOKEN_FAIL:\n      return {\n        ...state,\n        token: '',\n        loading: false,\n        error: action.payload.error,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport message from './message';\nimport auth from './auth';\n\nexport default combineReducers({\n  message,\n  auth,\n});\n","import {\n  createStore, compose, applyMiddleware,\n} from 'redux';\nimport throttle from 'lodash.throttle';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { loadState, saveState } from './storages/localStorage';\n\nconst configureStore = () => {\n  const logger = createLogger({\n  });\n\n  const enhancers = [];\n  let middlewares;\n\n\n  if (process.env.NODE_ENV === 'development') {\n    middlewares = [\n      thunk,\n      logger,\n    ];\n    if (process.browser) {\n      const { __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ } = window;\n      if (typeof __REDUX_DEVTOOLS_EXTENSION_COMPOSE__ === 'function') {\n        enhancers.push(__REDUX_DEVTOOLS_EXTENSION_COMPOSE__());\n      }\n    }\n  } else {\n    middlewares = [\n      thunk,\n    ];\n  }\n\n\n  const composedEnhancers = compose(\n    applyMiddleware(...middlewares),\n    ...enhancers,\n  );\n  const persistedState = { ...loadState() };\n\n  const store = createStore(\n    rootReducer,\n    persistedState,\n    composedEnhancers,\n  );\n  store.subscribe(throttle(() => {\n    saveState({\n      auth: store.getState().auth,\n    });\n  }, 3000));\n  return store;\n};\nexport default configureStore;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return {\n      ...JSON.parse(serializedState),\n    };\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // ignore write errors\n  }\n};\nexport const loadSession = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return {\n      ...JSON.parse(serializedState),\n    };\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveSession = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    // ignore write errors\n  }\n};\n","import * as firebase from 'firebase/app';\n\n\n// Add the Firebase products that you want to use\nimport 'firebase/auth';\nimport 'firebase/database';\n\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDVT7hjCcB-mi3a-q4A7XZvbkGgc8z4Q5w', // Auth / General Use\n  databaseURL: 'https://hackh-broadcast.firebaseio.com', // Realtime Database\n  storageBucket: 'hackh-broadcast.appspot.com', // Storage\n};\n\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './redux/redux';\nimport './localization';\nimport './loader/auth/auth';\nimport './loader/db/db';\n// TODO: Replace the following with your app's Firebase project configuration\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}